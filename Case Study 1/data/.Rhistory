# Merge beers and breweries dataset on "Brew_ID" columns
brews <- left_join(beers, breweries, by = "Brew_ID")
# Data validation after merge
head(brews, n=6) # Looks okay
tail(brews, n=6) # Looks okay
# There are only 17 beers missing ABV, these will be removed given the small amount
filtered_brews <- brews[!is.na(brews$ABV), ]
# Create dataset of just rows with null IBU to further investigate in correlation in these missing values
nulls <- filtered_brews[is.na(brews$IBU), ]
# Observe counts of unique values in each column to determine if any correlation might be identified of the 969 rows missing IBUs
table(nulls['ABV']) # no correlation seen when compared to full dataset
table(nulls['Ounces']) # no correlation seen when compared to full dataset
table(nulls['Style']) # no correlation seen when compared to full dataset
table(nulls['Name.y']) # no correlation seen when compared to full dataset
table(nulls['City']) # no correlation seen when compared to full dataset
table(nulls['State']) # no correlation seen when compared to full dataset
# Get median IBU of each Style
IBU_lookup <- filtered_brews %>%
group_by(Style) %>%
summarise(
median_IBU_Style = median(IBU, na.rm = TRUE)
)
# Create new column in brews to include median IBU for each style
# Loop through each row in filtered_brews
for(i in 1:nrow(filtered_brews)){
if(is.na(filtered_brews$IBU[i])){
filtered_brews$IBU[i] <- IBU_lookup$median_IBU_Style[IBU_lookup$Style == filtered_brews$Style[i]]
}
}
# There are still 11 beers missing IBU due to no available median value for thier particular class, these will be removed
filtered_brews <- filtered_brews[!is.na(brews$IBU), ]
# Create filtered dataset without rows containing missing IBU values
#filtered_brews <- brews[!is.na(brews$IBU), ]
#summary(filtered_brews) # There were 1,005 records removed with 1,405 remaining
#summary(brews)
# Get median of ABV and IBU by State
median_result <- filtered_brews %>%
group_by(State) %>%
summarise(
median_ABV = median(ABV, na.rm = TRUE),
median_IBU = median(IBU, na.rm = TRUE)
)
colnames(median_result) <- c("abb", "ABV", "IBU")
median_result$abb <- str_trim(median_result$abb)
median_result <- merge(median_result, lookup, by = "abb", all.x = TRUE)
median_result <- median_result[, c("State", "ABV", "IBU")]
ABV_row_number <- which(median_result$ABV == max(median_result$ABV))
IBU_row_number <- which(median_result$IBU == max(median_result$IBU))
knitr::kable(median_result, format="html", caption = "Median ABV and IBU by State") %>% kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down") %>% row_spec(c(ABV_row_number, IBU_row_number), background = "yellow")
median_result
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
library(ggpubr)
library(corrr)
library(knitr)
library(kableExtra)
# Set working directory to project folder
setwd("C:/Users/troym/Dropbox/Troy/Personal/SMU/6306 - Doing Data Science/_GitHub/troymcsimov/6306/Case Study 1/data/")
# Load both beers_updated.csv and breweries.csv data files
beers = read.csv(file = "Beers_updated.csv") # Beers_updated.csv is an update from Beers.csv with some of the missing ABVs populated and known styles with to no IBU
breweries = read.csv(file = "Breweries.csv")
# Create a table of state counts
byState <- table(breweries$State)
# Convert the table to a data frame
byState_df <- as.data.frame(byState)
# Rename the columns and trim whitespace around state abbreviations
colnames(byState_df) <- c("abb", "Breweries")
byState_df$abb <- str_trim(byState_df$abb)
# Create a lookup table for state abbreviation to state name (and add DC as District of Columbia)
lookup = data.frame(abb = state.abb, State = state.name)
lookup <- rbind(lookup,data.frame(abb = "DC", State = "District of Columbia"))
# Add a new column with full state names to the data frame
byStateName <- merge(byState_df, lookup, by = "abb", all.x = TRUE)
# Print only necessary columns and leave out row names
subset_df <- byStateName[, c("State", "Breweries")]
knitr::kable(subset_df, format="html")
```{r merge}
# Rename beers$Brewery_id to beers$Brew_ID to make it easier to merge with brewery dataset
colnames(beers)[colnames(beers) == "Brewery_id"] <- "Brew_ID"
# Merge beers and breweries dataset on "Brew_ID" columns
brews <- left_join(beers, breweries, by = "Brew_ID")
# Data validation after merge
head(brews, n=6) # Looks okay
tail(brews, n=6) # Looks okay
# There are only 17 beers missing ABV, these will be removed given the small amount
filtered_brews <- brews[!is.na(brews$ABV), ]
# Create dataset of just rows with null IBU to further investigate in correlation in these missing values
nulls <- filtered_brews[is.na(brews$IBU), ]
# Observe counts of unique values in each column to determine if any correlation might be identified of the 969 rows missing IBUs
table(nulls['ABV']) # no correlation seen when compared to full dataset
table(nulls['Ounces']) # no correlation seen when compared to full dataset
table(nulls['Style']) # no correlation seen when compared to full dataset
table(nulls['Name.y']) # no correlation seen when compared to full dataset
table(nulls['City']) # no correlation seen when compared to full dataset
table(nulls['State']) # no correlation seen when compared to full dataset
# Get median IBU of each Style
IBU_lookup <- filtered_brews %>%
group_by(Style) %>%
summarise(
median_IBU_Style = median(IBU, na.rm = TRUE)
)
# Create new column in brews to include median IBU for each style
# Loop through each row in filtered_brews
for(i in 1:nrow(filtered_brews)){
if(is.na(filtered_brews$IBU[i])){
filtered_brews$IBU[i] <- IBU_lookup$median_IBU_Style[IBU_lookup$Style == filtered_brews$Style[i]]
}
}
# There are still 11 beers missing IBU due to no available median value for thier particular class, these will be removed
filtered_brews <- filtered_brews[!is.na(brews$IBU), ]
# Get median of ABV and IBU by State
median_result <- filtered_brews %>%
group_by(State) %>%
summarise(
median_ABV = median(ABV, na.rm = TRUE),
median_IBU = median(IBU, na.rm = TRUE)
)
# Reorganize column names and merge State name into table
colnames(median_result) <- c("abb", "ABV", "IBU")
median_result$abb <- str_trim(median_result$abb)
median_result <- merge(median_result, lookup, by = "abb", all.x = TRUE)
median_result <- median_result[, c("State", "ABV", "IBU")]
# Find the row with the highest median ABV and IBU
ABV_row_number <- which(median_result$ABV == max(median_result$ABV))
IBU_row_number <- which(median_result$IBU == max(median_result$IBU))
# Print the result with the highest median ABV and IBU highlighted
knitr::kable(median_result, format="html", caption = "Median ABV and IBU by State") %>% kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down") %>% row_spec(c(ABV_row_number, IBU_row_number), background = "yellow")
# Plot bar chart showing median ABV and IBU for each state
#hist(median_result)
lookup
byStateName
subset_df
brews
filtered_brews
IBU_lookup
median_result
View(filtered_brews)
View(filtered_brews)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(stringr)
library(ggpubr)
library(corrr)
library(knitr)
library(kableExtra)
# Set working directory to project folder
setwd("C:/Users/troym/Dropbox/Troy/Personal/SMU/6306 - Doing Data Science/_GitHub/troymcsimov/6306/Case Study 1/data/")
# Load both beers_updated.csv and breweries.csv data files
beers = read.csv(file = "Beers_updated.csv") # Beers_updated.csv is an update from Beers.csv with some of the missing ABVs populated and known styles with to no IBU
breweries = read.csv(file = "Breweries.csv")
# Create a table of state counts
byState <- table(breweries$State)
# Convert the table to a data frame
byState_df <- as.data.frame(byState)
# Rename the columns and trim whitespace around state abbreviations
colnames(byState_df) <- c("abb", "Breweries")
byState_df$abb <- str_trim(byState_df$abb)
# Create a lookup table for state abbreviation to state name (and add DC as District of Columbia)
lookup = data.frame(abb = state.abb, State = state.name)
lookup <- rbind(lookup,data.frame(abb = "DC", State = "District of Columbia"))
# Add a new column with full state names to the data frame
byStateName <- merge(byState_df, lookup, by = "abb", all.x = TRUE)
# Print only necessary columns and leave out row names
subset_df <- byStateName[, c("State", "Breweries")]
knitr::kable(subset_df, format="html")
# Rename beers$Brewery_id to beers$Brew_ID to make it easier to merge with brewery dataset
colnames(beers)[colnames(beers) == "Brewery_id"] <- "Brew_ID"
# Merge beers and breweries dataset on "Brew_ID" columns
brews <- left_join(beers, breweries, by = "Brew_ID")
# Data validation after merge
head(brews, n=6) # Looks okay
tail(brews, n=6) # Looks okay
filtered_brews <- brews[!is.na(brews$ABV), ]
filtered_brews
View(filtered_brews)
View(filtered_brews)
for(i in 1:nrow(filtered_brews)){
if(is.na(filtered_brews$IBU[i])){
filtered_brews$IBU[i] <- IBU_lookup$median_IBU_Style[IBU_lookup$Style == filtered_brews$Style[i]]
}
}
View(filtered_brews)
View(filtered_brews)
filtered_brews <- filtered_brews[!is.na(filtered_brews$IBU), ]
View(filtered_brews)
View(filtered_brews)
filtered_brews <- brews[!is.na(brews$ABV), ]
IBU_lookup <- filtered_brews %>%
group_by(Style) %>%
summarise(
median_IBU_Style = median(IBU, na.rm = TRUE)
)
for(i in 1:nrow(filtered_brews)){
if(is.na(filtered_brews$IBU[i])){
filtered_brews$IBU[i] <- IBU_lookup$median_IBU_Style[IBU_lookup$Style == filtered_brews$Style[i]]
}
}
filtered_brews
View(filtered_brews)
View(filtered_brews)
summary(filtered_brews)
filtered_brews <- filtered_brews[!is.na(filtered_brews$IBU), ]
median_result <- filtered_brews %>%
group_by(State) %>%
summarise(
median_ABV = median(ABV, na.rm = TRUE),
median_IBU = median(IBU, na.rm = TRUE)
)
colnames(median_result) <- c("abb", "ABV", "IBU")
median_result$abb <- str_trim(median_result$abb)
median_result <- merge(median_result, lookup, by = "abb", all.x = TRUE)
median_result <- median_result[, c("State", "ABV", "IBU")]
ABV_row_number <- which(median_result$ABV == max(median_result$ABV))
IBU_row_number <- which(median_result$IBU == max(median_result$IBU))
knitr::kable(median_result, format="html", caption = "Median ABV and IBU by State") %>% kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down") %>% row_spec(c(ABV_row_number, IBU_row_number), background = "yellow")
IBU_row_number <- which(median_result$IBU == max(median_result$IBU))
IBU_row_number
ABV_row_number
knitr::kable(median_result, format="html", caption = "Median ABV and IBU by State") %>% kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down") %>% row_spec(ABV_row_number, background = "yellow") %>% , row_spec(IBU_row_number, background = "pink")
knitr::kable(median_result, format="html", caption = "Median ABV and IBU by State") %>% kable_styling(full_width = FALSE, position = "center", latex_options = "scale_down") %>% row_spec(ABV_row_number, background = "yellow") %>% row_spec(IBU_row_number, background = "pink")
median_result
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State"
theme_minimal() +
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=45, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=0, hjust=1))  # Horizontal x-axis labels
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(median_result, aes(x = abb, y = ABV, fill = abb)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State")
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(median_result, aes(x = State, y = IBU, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "IBU", x = "State",
title = "Median International Bitterness Units by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
# Plot bar chart showing median ABV for each state
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
# Plot bar chart showing median IBU for each state
ggplot(median_result, aes(x = State, y = IBU, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "IBU", x = "State",
title = "Median International Bitterness Units by State")
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
# Plot bar chart showing median IBU for each state
ggplot(median_result, aes(x = State, y = IBU, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "IBU", x = "State",
title = "Median International Bitterness Units by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
median_result$State <- factor(median_result$State,
levels = median_result$State[order(median_result$ABV, decreasing = TRUE)])
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
median_result$State <- factor(median_result$State,
levels = median_result$State[order(median_result$IBU, decreasing = TRUE)])
ggplot(median_result, aes(x = State, y = IBU, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "IBU", x = "State",
title = "Median International Bitterness Units by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
subset_df <- byStateName[, c("State", "Breweries")]
knitr::kable(subset_df, format="html", caption = "Count of Breweries by State")
gplot(subset_df, aes(x = State, y = Breweries, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "Number of Breweries", x = "State",
title = "Number of Breweries by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(subset_df, aes(x = State, y = Breweries, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "Number of Breweries", x = "State",
title = "Number of Breweries by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
subset_df
subset_df$State <- factor(subset_df$State,
levels = subset_df$State[order(subset_df$Breweries, decreasing = TRUE)])
ggplot(subset_df, aes(x = State, y = Breweries, fill = State)) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "Number of Breweries", x = "State",
title = "Number of Breweries by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(subset_df, aes(x = State, y = Breweries, fill = State)) +
geom_text(aes(label = Breweries), vjust = -0.5) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "Number of Breweries", x = "State",
title = "Number of Breweries by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(subset_df, aes(x = State, y = Breweries, fill = State)) +
geom_text(aes(label = Breweries), vjust = -1) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "Number of Breweries", x = "State",
title = "Number of Breweries by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(subset_df, aes(x = State, y = Breweries, fill = State)) +
geom_text(aes(label = Breweries), vjust = -0.5, size = 3) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "Number of Breweries", x = "State",
title = "Number of Breweries by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(subset_df, aes(x = State, y = Breweries, fill = State)) +
geom_text(aes(label = Breweries), vjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "Number of Breweries", x = "State",
title = "Number of Breweries by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
View(IBU_lookup)
View(IBU_lookup)
nulls <- filtered_brews[is.na(brews$IBU), ]
median_result$State <- factor(median_result$State,
levels = median_result$State[order(median_result$ABV, decreasing = TRUE)])
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV), vjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
median_result$State <- factor(median_result$State,
levels = median_result$State[order(median_result$ABV, decreasing = TRUE)])
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV), vjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV), vjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), vjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), angle = 90, vjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), angle = 90, vjust = 1, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
median_result$State <- factor(median_result$State,
levels = median_result$State[order(median_result$ABV, decreasing = TRUE)])
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), angle = 90, vjust = 2, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), angle = 90, vjust = 4, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), angle = 90, vjust = 8, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), angle = 90, hjust = 1, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = scales::percent(ABV)), angle = 90, hjust = -1, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = ABV), angle = 90, hjust = -1, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = ABV), angle = 90, hjust = 0, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = ABV, fill = State)) +
geom_text(aes(label = ABV), angle = 90, hjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "ABV", x = "State",
title = "Median Alcohol by Volume by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))
ggplot(median_result, aes(x = State, y = IBU, fill = State)) +
geom_text(aes(label = IBU), angle = 90, hjust = -0.5, size = 2) +
geom_bar(stat = "identity", show.legend = FALSE) +
labs(y = "IBU", x = "State",
title = "Median International Bitterness Units by State") +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90, hjust=1))  # Vertical x-axis labels
